on: issue_comment

jobs:
  pr_commented:
    # This job only runs for pull request comments
    name: I run on PR comment
    if: github.event.issue.pull_request
    runs-on: ubuntu-latest
    outputs:
      # opt_in is true if the comment body contains the string "!test"
      opt_in: ${{ contains(github.event.comment.body, '!test') }}
      # uncomment to opt in to pushing to vercel
      # merge: ${{ contains(github.event.comment.body, '!!test!!') }}
      ref: ${{ github.event.comment.pull_request.head.ref }}

    steps:
      - name: Check for opt-in
        run: echo "opt_in=${{ contains(github.event.comment.body, '!test') }}" >> $GITHUB_OUTPUT
      - name: data from comment
        run: echo "ref=${{ github.event.comment.pull_request.url }}" >> $GITHUB_OUTPUT

  checkout-repo:
    name: they said !test!

    # This job only runs if the previous job opted in
    needs: pr_commented
    if: needs.pr_commented.outputs.opt_in == 'true'

    runs-on: ubuntu-latest

    environment: committing to vercel

    steps:
      - uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              core.info(`Got PR #${request.pull_number} from ${request.owner}/${request.repo}`)
              core.info(JSON.stringify(result.data, undefined, 2))
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      # - name: get data

      # - name: Checkout PR
      #   uses: actions/checkout@v3
      #   with:
      #     ref: ${{ steps.get-pr.outputs.data.head.ref }}
      #     token: ${{ secrets.GITHUB_TOKEN }}

      # - name: install dependencies
      #   run: npm install

      # - name: run cypress
      #   uses: cypress-io/github-action@v4
      #   with:
      #     start: npm run dev

      #########
      # for future use
      ########
      # - name: push to vercel
      #   uses: amondnet/vercel-action@v20
      #   if: needs.pr_commented.outputs.merge == 'true'
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
