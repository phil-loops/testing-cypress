on: issue_comment

jobs:
  pr_commented:
    # This job only runs for pull request comments
    name: I run on PR comment
    if: github.event.issue.pull_request
    runs-on: ubuntu-latest
    outputs:
      # opt_in is true if the comment body contains the string "!test"
      opt_in: ${{ contains(github.event.comment.body, '!test') }}
      # uncomment to opt in to pushing to vercel
      # merge: ${{ contains(github.event.comment.body, '!!test!!') }}
    steps:
      - name: Check for opt-in
        run: echo "opt_in=${{ contains(github.event.comment.body, '!test') }}" >> $GITHUB_OUTPUT

  checkout-repo:
    name: they said !test!

    # This job only runs if the previous job opted in
    needs: pr_commented
    if: needs.pr_commented.outputs.opt_in == 'true'

    runs-on: ubuntu-latest

    environment: committing to vercel

    steps:
      - name: find PR
        uses: actions/github-script@v6
        id: get-pr
        with:
          result-encoding: string
          script: |
            console.log('finding PR')
            console.log(`owner: ${context.repo.owner}`)
            console.log(`repo: ${context.repo.repo}`)
            console.log(`issue number: ${context.issue.number}`)

            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            })

            console.log({pr: pr.data.pull_request})

            return pr.data

      - name: safety check
        run: |
          echo "last result: ${{ steps.get-pr.outputs.result }}"

      - name: checkout PR
        uses: actions/checkout@v3
        with:
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }}

      - name: install dependencies
        run: npm install

      - name: run cypress
        uses: cypress-io/github-action@v4
        with:
          start: npm run dev

      #########
      # for future use
      ########
      # - name: push to vercel
      #   uses: amondnet/vercel-action@v20
      #   if: needs.pr_commented.outputs.merge == 'true'
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
